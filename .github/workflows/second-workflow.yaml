name: Second Workflow
on:
    push:
    workflow_dispatch:
        inputs:
          display-bom:
            required: false
            type: 'boolean'
            default: false
jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Get code
  #       uses: actions/checkout@v4
  # - name: Cache dependencies
  #   uses: actions/cache@v4
  # id: cache
  # with:
  #   path: |
  #     node_modules
  #       ~/.cache/Cypress
  #   key: npm-dep-${{ hashFiles('**/package-lock.json') }}

  # - name: Get dependencies
  #   if: steps.cache.outputs.cache-hit != 'true'
  #   run: npm ci
  # - name: Lint code
  #   run: npm run lint
  # - name: List content
  #   run: ls -al
  # - name: Run the server
  #   run: npm run dev < /dev/null & npx wait-on "http://localhost:5173" --timout 10s
  # - name: Cypress Tests
  #   run: npx cypress run
  # - name: Cypress run
  #   uses: cypress-io/github-action@v6
  #   with:
  #     start: npm run dev
  #     wait-on: "http://localhost:5173"

  build:
    #needs: test
    runs-on: ubuntu-latest
    outputs:
      bom: ${{ steps.publish-bom.outputs.bom_list }}

    steps:
      - name: Get code
        id: cache
        uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
              ~/.cache/Cypress
          key: npm-dep-${{ hashFiles('**/package-lock.json') }}

      - name: Get dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build the app
        run: npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: my-app
          path: dist
      - name: Detail content
        id: publish-bom
        run: |
          echo 'bom_list<<EOF' >> $GITHUB_OUTPUT
          find dist -name '*.js' -exec echo '{}' \; >> $GITHUB_OUTPUT
          echo EOF >> $GITHUB_OUTPUT

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Pseudo Deployment
        run: echo "Deploying App"
      - name: Get artifacts
        uses: actions/download-artifact@v4
        with:
          name: my-app

      - name: Output artifacts
        run: ls
      - name: Display BOM
        if: github.event.inputs.display-bom
        run: echo "${{ needs.build.outputs.bom }}"
        
